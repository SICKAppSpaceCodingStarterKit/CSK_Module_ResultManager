<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<manifest>
    <application name="CSK_Module_ResultManager">
        <crown name="CSK_Module_ResultManager">
            <desc>This is an automatically generated CROWN (description not necessary).</desc>
        </crown>
        <crown name="CSK_ResultManager">
            <trait>released</trait>
            <desc>Module to provide result management / expression functionality. +
This module is helpful to check if the results of other modules are valid. +
It makes use of the "LuaXP" expression evaluator. For more details please visit https://www.toggledbits.com/luaxp. +
{empty} +
Typically the features of this module are used like this (check also main script of this module): +
{empty} +
**1) Create new expression** +
Set a name/identifier for your expression via 'setExpressionName' and add it via 'addExpressionViaUI'. +
{empty} +
**2) Configure expression** +
Define an expression like 'param1 + param2' via 'setExpression'. +
INFO: For more information regarding valid expression syntax please visit https://www.toggledbits.com/node/13. +
{empty} +
Furthermore there are additional syntaxes available: +
{empty} +
**stringPack** : returns a binary string (see https://www.lua.org/manual/5.3/manual.html#6.4.2) +
Sample: stringPack('I2', param1) or stringPack('I2I4I2', param1, param2, param3) +
{empty} +
**stringUnpack** : returns the value packed in binary string (see https://www.lua.org/manual/5.3/manual.html#6.4.2) +
Sample: stringUnpack('I2', param1) or stringPack('I4', param1, 1,4) +
The additional parameters are only needed if it is necessary to substract a substring out of the received value, e.g. here it will cut the binary string from position 1 to 4. +
INFO: 'stringUnpack' only works with one single parameter! +
{empty} +
**searchAndCut** : searches for 2 strings in the received data as start and end positions and cuts the part between these positions. It is possible to add 2 additional numeric values to extend/reduce the positions. +
Sample: searchAndCut(param1, 'Value1', '}') or searchAndCut(param1, 'Value1', '}', 1, -2) +
{empty} +
**dateTime** : returns Date and Time in string format = 'YYYY-MM-DDTHH_MM_SS', like '20240709T14_12_59' +
{empty} +
**timestamp** : returns a timestamp as string, like '2265809' +
{empty} +
After that define the criteria and its type via 'setCriteria' / 'setCriteriaType'. +
{empty} +
**3) Parameter** +
If you make use of parameters within your expression (e.g. 'param1 + param2'), you need to define where these parameters get their value from. +
To do so, you need to add a parameter to your expression via 'addParameterViaUI' and select it via 'selectParameter'. +
Now you can configure the related event for this parameter via 'setParameterEvent'. +
If the event provides multiple parameter, you optionally can select the required one by setting the position via 'setParameterPosition'. +
Repeat this for each parameter. +
{empty} +
**4) Processing** +
Each expression will wait till ALL parameters got their values via the configured events. +
As soon as all parameters are available, it will start the processing of the expression. +
It will compare this result with the defined criteria and will provide its result via a dynamically created "CSK_ResultManager.OnNewCriteriaResult_EXPRESSION" event. +
{empty} +
Via a dynamically created "CSK_ResultManager.OnNewResult_EXPRESSION" event, the module can provide: +
(EXPRESSION will be replaced by the name of the added expression (e.g. "CSK_OnNewResult_CheckSumOfXY"). +
{empty} +
- the result of the expression itself (default) +
or +
- a custom defined result related to the status if the crtieria was valid or not (see 'setCustomResultMode') +
{empty} +
INFO: In general it is possible to only provide the result if the criteria was valid. See 'setCheckCriteriaToForward'. +
At the end it will clear all parameter values and will wait for new values. +
INFO: Please make sure that the frequency of the events is in sync to not mix the result of different sources. +
{empty} +
Another possibility is to make use of 'addExpression' which combines most of the mentioned steps. +</desc>
            <enum name="CriteriaType" trait="released">
                <desc>Type of criteria.</desc>
                <item desc="Criteria is a STRING." name="STRING">STRING</item>
                <item desc="Criteria is a specific number value." name="NUMBER">NUMBER</item>
                <item desc="Criteria is within a range of numbers." name="RANGE">RANGE</item>
                <item desc="Criteria is a BOOL." name="BOOL">BOOL</item>
            </enum>
            <serves>
                <event name="OnNewStatusLoadParameterOnReboot">
                    <desc>Notify status if parameters should be loaded on app/device boot up.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnPersistentDataModuleAvailable">
                    <desc>Notify status if features of CSK_PersistendData module are available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnDataLoadedOnReboot">
                    <desc>Event to call if module tried to load parameters and should be ready.</desc>
                </event>
                <event name="OnNewParameterName">
                    <desc>Notify name of persistent data parameter.</desc>
                    <param desc="Parameter name" multiplicity="1" name="name" type="string"/>
                </event>
                <event name="OnUserLevelOperatorActive">
                    <desc>Status of Operator userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnUserLevelMaintenanceActive">
                    <desc>Status of Maintenance userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnUserLevelServiceActive">
                    <desc>Status of Service userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnUserLevelAdminActive">
                    <desc>Status of Admin userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusSelectedExpression">
                    <desc>Notify selected expression.</desc>
                    <param desc="Selected expression" multiplicity="1" name="selection" type="string"/>
                </event>
                <event name="OnNewStatusExpressionName">
                    <desc>Notify name of currently selected expression.</desc>
                    <param desc="Name of expression." multiplicity="1" name="name" type="string"/>
                </event>
                <event name="OnNewStatusExpression">
                    <desc>Notify expression to process of current selected expression.</desc>
                    <param desc="Expression to process." multiplicity="1" name="expression" type="string"/>
                </event>
                <event name="OnNewStatusCriteria">
                    <desc>Notify (minimum) criteria for selected expression.</desc>
                    <param desc="Criteria" multiplicity="1" name="criteria" type="auto"/>
                </event>
                <event name="OnNewStatusCriteriaMaximum">
                    <desc>Notify maximum value of criteria (if criteria is a range).</desc>
                    <param desc="Maximum value of criteria." multiplicity="1" name="maxCriteria" type="float"/>
                </event>
                <event name="OnNewStatusParameterList">
                    <desc>Notify list of expression parameters.</desc>
                    <param desc="List of expression parameter details." multiplicity="1" name="list" type="string"/>
                </event>
                <event name="OnNewStatusListOfExpressions">
                    <desc>Notify list of available expressions.</desc>
                    <param desc="List" multiplicity="1" name="list" type="string"/>
                </event>
                <event name="OnNewStatusResult">
                    <desc>Notify current result of selected expression.</desc>
                    <param desc="Result" multiplicity="1" name="result" type="string"/>
                </event>
                <event name="OnNewStatusCriteriaType">
                    <desc>Notify type of criteria.</desc>
                    <param desc="Type" multiplicity="1" name="type" type="string"/>
                </event>
                <event name="OnNewStatusCriteriaString">
                    <desc>Notify string criteria.</desc>
                    <param desc="Criteria" multiplicity="1" name="criteria" type="string"/>
                </event>
                <event name="OnNewStatusLinkedEvent">
                    <desc>Notify linked event of selected expression parameter.</desc>
                    <param desc="Name of event." multiplicity="1" name="eventName" type="string"/>
                </event>
                <event name="OnNewStatusSelectedParameter">
                    <desc>Notify name of selected expression parameter.</desc>
                    <param desc="Name of parameter." multiplicity="1" name="parametername" type="string"/>
                </event>
                <event name="OnNewResult_EXPRESSION">
                    <desc>Example of dynamically served event to provide the result of expression itself. +
EXPRESSION will be replaced by the name of the added expression (e.g. "CSK_OnNewResult_CheckSumOfXY"). +
INFO: Other modules can check via "Script.isServedAsFunction" if event exists. +</desc>
                    <param desc="Status" multiplicity="1" name="result" type="auto"/>
                </event>
                <event name="OnNewStatusAvailableEvents">
                    <desc>Notify available events.</desc>
                    <param desc="JSON list" multiplicity="1" name="listOfEvents" type="string"/>
                </event>
                <event name="OnNewStatusFlowConfigPriority">
                    <desc>Notify if FlowConfig should have priority for FlowConfig relevant configurations.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusCriteriaResult">
                    <desc>Notify current criteria result of selected expression.</desc>
                    <param desc="Result" multiplicity="1" name="result" type="bool"/>
                </event>
                <event name="OnNewStatusEventParameterPosition">
                    <desc>Notify parameter position to be used for currently selected parameter event.</desc>
                    <param desc="Position of parameter." multiplicity="1" name="parameterPosition" type="int"/>
                </event>
                <event name="OnNewCriteriaResult_EXPRESSION">
                    <desc>Example of dynamically served event to provide criteria result of expression. +
EXPRESSION will be replaced by the name of the added expression (e.g. "CSK_OnNewCriteriaResult_CheckSumOfXY"). +
INFO: Other modules can check via "Script.isServedAsFunction" if event exists. +</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusExpressionSelected">
                    <desc>Notify status if an expression is selected.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewData_EXPRESSION">
                    <desc>Notify forwarded data of expression.</desc>
                    <param desc="Optional data1" multiplicity="?" name="data1" type="auto"/>
                    <param desc="Optional data2" multiplicity="?" name="data2" type="auto"/>
                    <param desc="Optional data3" multiplicity="?" name="data3" type="auto"/>
                    <param desc="Optional data4" multiplicity="?" name="data4" type="auto"/>
                </event>
                <event name="OnNewStatusMergeData">
                    <desc>Notify if multiple data should be merged to new event.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusEventInfo">
                    <desc>Notify info about event name of expression.</desc>
                    <param desc="Name of event(s)." multiplicity="1" name="eventInfo" type="string"/>
                </event>
                <event name="OnNewStatusCSKStyle">
                    <desc>Notify UI style to use for CSK modules.</desc>
                    <param desc="UI style" multiplicity="1" name="theme" type="string"/>
                </event>
                <event name="OnNewStatusModuleVersion">
                    <desc>Notify version of module.</desc>
                    <param desc="Version" multiplicity="1" name="version" type="string"/>
                </event>
                <event name="OnNewStatusModuleIsActive">
                    <desc>Notify if module can be used on device.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusShowProcessData">
                    <desc>Notify if process data should be shown in UI.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusCheckCriteriaToForwardResult">
                    <desc>Notify status if criteria needs to be valid to notify result.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusCustomResultMode">
                    <desc>Notify if custom results should be used.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusCustomResultOK">
                    <desc>Notify custom result to send if criteria was valid.</desc>
                    <param desc="Result" multiplicity="1" name="result" type="string"/>
                </event>
                <event name="OnNewStatusCustomResultNOK">
                    <desc>Notify custom result to send if criteria was not valid.</desc>
                    <param desc="Result" multiplicity="1" name="result" type="string"/>
                </event>
                <function name="setParameterName">
                    <desc>Function to set the name of the parameters if saved/loaded via the CSK_PersistentData module.</desc>
                    <param desc="Name of the parameter." multiplicity="1" name="name" type="string"/>
                </function>
                <function name="sendParameters">
                    <desc>Send parameters to CSK_PersistentData module if possible to save them.</desc>
                    <param desc="[Optional] Set to TRUE if the data should NOT be saved immediately after sending." multiplicity="?" name="noDataSave" type="bool"/>
                </function>
                <function name="setLoadOnReboot">
                    <desc>Configure if this module should load its saved parameters at app/device boot up.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="pageCalled">
                    <desc>Function to register "OnResume" of the module UI (only as helper function).</desc>
                    <return desc="Empty string (only needed to simplify binding)." multiplicity="1" name="empty" type="string"/>
                </function>
                <function name="selectExpressionByName">
                    <desc>Function to select an expression by its name.</desc>
                    <param desc="Selected expression." multiplicity="1" name="selection" type="string"/>
                    <return desc="Success" multiplicity="1" name="success" type="bool"/>
                </function>
                <function name="setExpressionName">
                    <desc>Function to set name for new expression to create.</desc>
                    <param desc="Name of expression." multiplicity="1" name="name" type="string"/>
                </function>
                <function name="addExpressionViaUI">
                    <desc>Function to add new expression via UI,</desc>
                </function>
                <function name="setExpression">
                    <desc>Function to set expression to process for currently selected expressionName.</desc>
                    <param desc="Expression (like 'param1 * param2')." multiplicity="1" name="expression" type="string"/>
                </function>
                <function name="setCriteria">
                    <desc>Function to set criteria of expression (if range, this is the minimum valid value).</desc>
                    <param desc="Criteria" multiplicity="1" name="criteria" type="auto"/>
                </function>
                <function name="setCriteriaMaximum">
                    <desc>Function to set maximum value of criteria range.</desc>
                    <param desc="Maximum accepted value." multiplicity="1" name="maxCriteria" type="float"/>
                </function>
                <function name="setCriteriaType">
                    <desc>Function to set type of criteria (see Enum CriteriaType).</desc>
                    <param desc="Type of criteria." multiplicity="1" name="criteriaType" type="string"/>
                </function>
                <function name="addParameterViaUI">
                    <desc>Function to add parameter to be used within expression.</desc>
                </function>
                <function name="selectParameterViaUI">
                    <desc>Function to select expression parameter.</desc>
                    <param desc="Selection" multiplicity="1" name="selection" type="string"/>
                </function>
                <function name="deleteExpressionViaUI">
                    <desc>Function to delete preselected expression.</desc>
                </function>
                <function name="setParameterEvent">
                    <desc>Function to set event to register to for updating values of selected parameter of expression.</desc>
                    <param desc="Event" multiplicity="1" name="event" type="string"/>
                </function>
                <function name="clearParameterDataViaUI">
                    <desc>Function to clear current stored data of currently selected expression.</desc>
                </function>
                <function name="deleteParameterViaUI">
                    <desc>Function to delete parameter of expression.</desc>
                </function>
                <function name="addExpression">
                    <desc>Function to add a new expression.</desc>
                    <param desc="Name of the expression to process." multiplicity="1" name="name" type="string"/>
                    <param desc="Status if multiple data should only be merged to single event." multiplicity="1" name="mergeData" type="bool"/>
                    <param desc="Expression to perform." multiplicity="1" name="expression" type="string"/>
                    <param desc="Type of criteria." multiplicity="1" name="criteriaType" ref="CSK_ResultManager.CriteriaType" type="enum"/>
                    <param desc="Expected result of the expression (optionally minimum if criteria is a 'RANGE')." multiplicity="1" name="criteria" type="auto"/>
                    <param desc="Optional maximum value of criteria." multiplicity="?" name="criteriaMax" type="float"/>
                    <param alias="string" desc="Optional list of events to receive values for parameters. +&#10;Event on position '1' is related to expression parameter 'param1' and so on." multiplicity="*" name="events" type="string"/>
                    <param desc="Optional list of the used parameter positions within the defined events (see parameter 'events')." multiplicity="*" name="parameterPosition" type="int"/>
                </function>
                <function name="selectParameter">
                    <desc>Function to select parameter of preselected expression.</desc>
                    <param desc="Number of parameter (1 = param1)" multiplicity="1" name="parameterNo" type="int"/>
                    <return desc="Success" multiplicity="1" name="success" type="bool"/>
                </function>
                <function name="selectEventViaUI">
                    <desc>Function to select event out of list.</desc>
                    <param desc="Event" multiplicity="1" name="event" type="string"/>
                </function>
                <function name="setParameterPosition">
                    <desc>Function to set the parameter position within the registered event.</desc>
                    <param desc="Event parameter position (default is '1')." multiplicity="1" name="pos" type="int"/>
                </function>
                <function name="executeExpressionViaUI">
                    <desc>Function to execute current set expression (see 'selectExpressionByName'). Will only work for static expressions (will not consider dynamic parameters...).</desc>
                </function>
                <function name="setMergeData">
                    <desc>Function to set status if only multiple data should be merged into new event.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="setFlowConfigPriority">
                    <desc>Function to configure if FlowConfig should have priority for FlowConfig relevant configuration.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="clearFlowConfigRelevantConfiguration">
                    <desc>Function to clear FlowConfig relevant configurations.</desc>
                </function>
                <function name="getStatusModuleActive">
                    <desc>Function to get status if module is active.</desc>
                    <return desc="Status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="loadParameters">
                    <desc>Load parameters for this module from the CSK_PersistentData module if possible and use them.</desc>
                    <return desc="Success to load parameters." multiplicity="1" name="success" type="bool"/>
                </function>
                <function name="getParameters">
                    <trait>released</trait>
                    <desc>Function to get all parameters of the client in JSON format.</desc>
                    <return desc="JSON string with all parameters." multiplicity="1" name="jsonParameters" type="string"/>
                </function>
                <function name="resetModule">
                    <desc>Function to reset main configuration of module.</desc>
                </function>
                <function name="setShowProcessData">
                    <desc>Function to set if process data should be shown in UI.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="setCheckCriteriaToForward">
                    <desc>Function to set status if results only should be provided if criteria was valid.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="setCustomResultMode">
                    <desc>Function to set if custom results should be forwarded instead of expression result itself.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="setCustomResultOK">
                    <desc>Function to set result to provide if criteria was valid and customResult mode is active.</desc>
                    <param desc="Result" multiplicity="1" name="result" type="string"/>
                </function>
                <function name="setCustomResultNOK">
                    <desc>Function to set result to provide if criteria was not valid and customResult mode is active.</desc>
                    <param desc="Result" multiplicity="1" name="result" type="string"/>
                </function>
            </serves>
        </crown>
        <crown name="ResultManager_FC">
            <trait>released</trait>
            <desc>Crown to provide CSK_FlowConfig relevant features.</desc>
            <enum name="ResultType" trait="released" type="string">
                <desc>Types of results to provide.</desc>
                <item desc="Check if result of expression matches the criteria definition. Will return BOOL value." name="CRITERIA">CRITERIA</item>
                <item desc="Result of expression. Return value depends on configuration." name="EXPRESSION">EXPRESSION</item>
                <item desc="Merge incoming data of multiple sources to provide as single source with multiple parameters." name="DATA">DATA</item>
            </enum>
            <serves/>
            <crown name="DataSource">
                <desc>Set source(s) of incoming data to use as parameter in expression / to merge data</desc>
                <serves>
                    <function name="create">
                        <desc>Internally used CSK_FlowConfig create function.</desc>
                        <param desc="Name of expression." multiplicity="1" name="ExpressionName" type="string"/>
                        <param desc="Parameter position within source1 (default is '1')." multiplicity="?" name="ParamPos1" type="int"/>
                        <param desc="Parameter position within source2 (default is '1')." multiplicity="?" name="ParamPos2" type="int"/>
                        <param desc="Parameter position within source3 (default is '1')." multiplicity="?" name="ParamPos3" type="int"/>
                        <param desc="Parameter position within source4 (default is '1')." multiplicity="?" name="ParamPos4" type="int"/>
                        <return desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                    </function>
                    <function name="dataSource">
                        <include>data-flow</include>
                        <desc>Set source(s) of incoming data to use as parameter in expression / to merge data</desc>
                        <param desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                        <param desc="Source of param1 to use in expression.&#10;&#10;Parameter:&#10;1: Data (AUTO)" multiplicity="?" name="source1" ref="ResultManager_FC.ResultType" type="string"/>
                        <param desc="Source of param2 to use in expression.&#10;&#10;Parameter:&#10;1: Data (AUTO)" multiplicity="?" name="source2" type="string"/>
                        <param desc="Source of param3 to use in expression.&#10;&#10;Parameter:&#10;1: Data (AUTO)" multiplicity="?" name="source3" type="string"/>
                        <param desc="Source of param4 to use in expression.&#10;&#10;Parameter:&#10;1: Data (AUTO)" multiplicity="?" name="source4" type="string"/>
                    </function>
                </serves>
            </crown>
            <crown name="OnNewResult">
                <trait>released</trait>
                <desc>Provide result of expression or merged data.</desc>
                <serves>
                    <event name="OnNewResult">
                        <include>data-flow</include>
                        <desc>Provide result of expression or merged data.</desc>
                        <param desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                        <param desc="'CSK_ResultManager.OnNewCriteriaResult_[EXPRESSION]' or 'CSK_ResultManager.OnNewResult_[EXPRESSION]' or 'CSK_ResultManager.OnNewData_[EXPRESSION]'&#10;&#10;Parameter:&#10;1: Result (AUTO)&#10;2-4: (optional) AUTO data types if 'Mode' = 'DATA'" multiplicity="1" name="OnNewResult" type="string"/>
                    </event>
                    <function name="create">
                        <trait>released</trait>
                        <desc>Internally used CSK_FlowConfig create function.</desc>
                        <param desc="Name of expression." multiplicity="1" name="ExpressionName" type="string"/>
                        <param desc="Type of result to provide.&#10;&#10;'CRITERIA' = Result if defined criteria was fullfilled&#10;&#10;'EXPRESSION' = Result of defined expression or custom defined result based on criteria result.&#10;&#10;'DATA' = Provide merged data of multiple sources" multiplicity="1" name="Mode" ref="ResultManager_FC.ResultType" type="enum"/>
                        <return desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                    </function>
                    <function name="register">
                        <trait>released</trait>
                        <desc>Internally used CSK_FlowConfig register function.</desc>
                        <param desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                        <param desc="Internal parameter (not used)." multiplicity="1" name="eventname" type="string"/>
                        <param desc="Internally used callback function." multiplicity="1" name="callback" type="string"/>
                        <return desc="Success of register process." multiplicity="1" name="success" type="bool"/>
                    </function>
                </serves>
            </crown>
            <crown name="Process">
                <trait>released</trait>
                <desc>Set source(s) of incoming data to use as parameter in expression / to merge data and provide result of expression or merged data.</desc>
                <serves>
                    <function name="create">
                        <trait>released</trait>
                        <desc>Internally used CSK_FlowConfig create function.</desc>
                        <param desc="Name of expression." multiplicity="1" name="ExpressionName" type="string"/>
                        <param desc="Type of result to provide.&#10;&#10;'CRITERIA' = Result if defined criteria was fullfilled&#10;&#10;'EXPRESSION' = Result of defined expression or custom defined result based on criteria result.&#10;&#10;'DATA' = Provide merged data of multiple sources" multiplicity="1" name="Mode" ref="ResultManager_FC.ResultType" type="enum"/>
                        <param desc="Position of parameter1 within event. (default is '1')" multiplicity="?" name="Param1EventPos" type="int"/>
                        <param desc="Position of parameter2 within event. (default is '1')" multiplicity="?" name="Param2EventPos" type="int"/>
                        <param desc="Position of parameter3 within event. (default is '1')" multiplicity="?" name="Param3EventPos" type="int"/>
                        <param desc="Position of parameter4 within event. (default is '1')" multiplicity="?" name="Param4EventPos" type="int"/>
                        <return desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                    </function>
                    <function name="process">
                        <include>data-flow</include>
                        <desc>Set source(s) of incoming data to use as parameter in expression / to merge data and provide result of expression or merged data.</desc>
                        <param desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                        <param desc="Source of param1 to use in expression.&#10;&#10;Parameter:&#10;1: Data (AUTO)" multiplicity="?" name="source1" type="string"/>
                        <param desc="Source of param2 to use in expression.&#10;&#10;Parameter:&#10;1: Data (AUTO)" multiplicity="?" name="source2" type="string"/>
                        <param desc="Source of param3 to use in expression.&#10;&#10;Parameter:&#10;1: Data (AUTO)" multiplicity="?" name="source3" type="string"/>
                        <param desc="Source of param4 to use in expression.&#10;&#10;Parameter:&#10;1: Data (AUTO)" multiplicity="?" name="source4" type="string"/>
                        <return desc="'CSK_ResultManager.OnNewCriteriaResult_[EXPRESSION]' or 'CSK_ResultManager.OnNewResult_[EXPRESSION]' or 'CSK_ResultManager.OnNewData_[EXPRESSION]'&#10;&#10;Parameter:&#10;1: Result (AUTO)&#10;2-4: (optional) AUTO data types if 'Mode' = 'DATA'" multiplicity="1" name="OnNewResult" type="string"/>
                    </function>
                </serves>
            </crown>
        </crown>
        <meta key="author">SICK AG</meta>
        <meta key="version">2.0.1</meta>
        <meta key="priority">low</meta>
        <meta key="copy-protected">false</meta>
        <meta key="read-protected">false</meta>
        <meta key="crown2-flow-engine">false</meta>
        <meta key="LuaLoadAllEngineAPI">false</meta>
        <entry default="CSK_Module_ResultManager.lua" path="scripts"/>
    </application>
</manifest>
